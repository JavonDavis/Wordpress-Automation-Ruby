# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
      # Specify the Xcode version to use
      macos:
        xcode: "9.3.0"

      shell: /bin/bash --login -eo pipefail

      steps:
        - checkout

        - run:
            name: Set Ruby Version
            command:  echo "ruby-2.4.1" > ~/.ruby-version

        - run:
            name: adb pull
            command:  echo 'ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"'

        - run: brew cask install android-sdk

        - run: echo 'export ANDROID_HOME=/usr/local/share/android-sdk' >> $BASH_ENV

        - run: ls /usr/local/share/android-sdk

        - run: echo 'export ANDROID_SDK_ROOT=/usr/local/share/android-sdk' >> $BASH_ENV

        - run:
            name: emulator link
            command: |
              cd /usr/local/share/android-sdk/tools
              ln -s emulator64-x86 emulator-x86

        - run: mkdir /usr/local/share/android-sdk/platforms

        - run:
            name: install adb
            command:  brew cask install android-platform-tools

        - run: brew cask info android-platform-tools

        - run: sudo mkdir /usr/local/share/android-sdk/platform-tools/

        - run: sudo cp -a /usr/local/Caskroom/android-platform-tools/28.0.0/platform-tools/. /usr/local/share/android-sdk/platform-tools/

        - run: echo 'export PATH=$ANDROID_SDK_ROOT/platform-tools:$PATH' >> $BASH_ENV

        - run: echo 'export PATH=$ANDROID_SDK_ROOT/tools/bin:$PATH' >> $BASH_ENV

        - run: echo 'export PATH=$ANDROID_SDK_ROOT/tools:$PATH' >> $BASH_ENV

        - run: echo 'export PATH=$ANDROID_HOME/emulator:$PATH' >> $BASH_ENV

        - run: echo 'export PATH=$ANDROID_HOME/build-tools:$PATH' >> $BASH_ENV

        - run: echo $PATH

        - run:
            name: List available images
            command: |
              sdkmanager --list --verbose

        - run:
            name: Setup emulator
            command: |
              sdkmanager "system-images;android-28;google_apis;x86"

        - run:
            name: License
            command: yes | sudo sdkmanager --licenses
            background: true

        - run:
            name: Wait on emulator
            command: sleep 10

        - run:
            name: Setup emulator
            command: |
              sdkmanager "system-images;android-28;google_apis;x86"

        - run: sdkmanager --install "build-tools;28.0.1"

        - run: ls /usr/local/share/android-sdk

        - run: sdkmanager --update

        - run: echo "no" | avdmanager create avd -n emulator-1 -k "system-images;android-28;google_apis;x86"

        - run:
            name: Start emulator
            command: emulator -avd emulator-1 -no-skin -no-audio -no-window
            background: true

        - run:
            name: Wait on emulator
            command: sleep 10

        - run:
            name: adb devices test
            command:  adb devices

        - run:
            name: Install Project Dependencies
            command: |
              bundle check --path=vendor/bundle || bundle install --retry=3 --path vendor

        - run:
            name: Install appium
            command: |
              npm install -g appium

        - run:
            name: Install allure
            command: |
              brew install allure

        - run:
            name: Download apk file
            command: |
              curl -L -o ./apps/WordPress.apk "https://drive.google.com/uc?export=download&id=1Hb2z7guNc8ch1o11mmuP5aioJ_Endal3"

        - run:
            name: Download app file
            command: |
              curl -L -o ./apps/WordPress.app.zip "https://drive.google.com/uc?export=download&id=18ODObtGuG3UYhgst-6h6ucn79_kYTxwD"

        - run:
            name: Check available simulators
            command: instruments -s devices

        - run: mkdir ./output

        # run tests!
        - run:
            name: run tests
            command: |
              platform=all bundle exec rake wordpress:test

        - store_test_results:
            path: ./output

        - store_artifacts:
            path: wordpress-report
            destination: wordpress